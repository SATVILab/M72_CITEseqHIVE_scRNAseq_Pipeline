---
title: "Running Terra Workflows for CITEseq-HIVE"
format: html
editor: visual
---

## Description

This document provides instructions for running Terra Workflows used to process scRNAseq data generated by CITEseq-HIVE for the M72 Immune Correlates of Protection scRNAseq Pilot Study.

For the pilot phase of this study, only initial demultiplexing, read alignment and counting, and QC will be performed using Terra. Downstream analyses will be performed locally or on the UCT HPC. Those analysis pipelines will be included in later in this book. 

## Add Workflows to Terra Workspace

Clone the following open-source Workflows to the Terra Workspace:

[bcl2fastq](https://portal.firecloud.org/?return=firecloud#methods/SATVI/bcl2fastq/2)

*Note - This Workflow requires a bcl2fastq docker image. You may need to create your own docker image due to Illumina's license limit restrictions. To build your own bcl2fastq docker image, follow [these instructions](https://cumulus.readthedocs.io/en/latest/bcl2fastq.html).*

[BNPv2_beta](https://portal.firecloud.org/?return=firecloud#methods/BeeNetPLUS_v2/BNPv2_beta/2)

*Note - At the time this document was written, BeeNetPLUS (BNP) is still in development. Be aware that this is a beta version and there may be an updated version available in the future.*

*Note - You will need to request access from Honeycomb Biotechnologies. Instructions on requesting access and setup can be found [here](https://honeycombbio.zendesk.com/hc/en-us/categories/5401005671195-Data-Analysis).*

## Run bcl2fastq

bcl2fastq is used to demultiplex samples and generate fastq files. This should be run for each sequencing run. 

  1. In your Experiment Folder that contains your individual sequencing run folders, create a subdirectory called "fastqs" ([TERRA_BUCKET]/[EXPERIMENT_FOLDER]/[fastqs]). 
  
      *Note - All fastqs from all runs should be stored in the same fastqs folder. Do not create a new fastqs folder for each sequencing run.*
  
  2. In your Terra Workspace, open the bcl2fastq Workflow. 
  
  3. Select "Run workflow with inputs defined by file paths."
  
  4. Change bcl2fastq input_bcl_directory to “gs://[TERRA_BUCKET]/[EXPERIMENT_FOLDER]/[RUN_FOLDER]"
  
  5. Change bcl2fastq output_directory to “gs://[TERRA_BUCKET]/[EXPERIMENT_FOLDER]/[fastqs]"
  
  6. Change bcl2fastq sample_sheet to “gs://[TERRA_BUCKET]/[EXPERIMENT_FOLDER]/[RUN_FOLDER]/[SampleSheet.csv]"
  
  7. Change bcl2fastq create_fastq_for_index_reads to "true"
  
  8. Change bcl2fastq mask_short_adapter_reads to "15"
  
  9. Change bcl2fastq minimum_trimmed_read_length to "35"
  
  10. Click "Save."
  
  11. Click "Run Analysis."
  
  12. Enter a description for the run.
  
      *Note - The note should be brief but descriptive. For example - "Demultiplex YYYYMMMDD_RUN001." If you need to re-run the analysis for a certain sequencing run, explain what you are doing differently. For example - "Rerunning YYYYMMDD_RUN001 with corrected sample sheet."
      
  13. Click "Launch."
  
  14. Monitor progress of the run  the "Job History" page. 
  
All demultiplexed fastqs for all runs should now be stored in your fastqs folder. 

## Run BeeNet

BeeNet is used for read alignment and counting, as well as basic QC. This workflow can be run on individual batches as samples are accumulated, but should be run on all samples together once all samples have been sequenced and demultiplexed. 

### Create additional input files needed for BNPv2_beta

Templates for each sample sheet can be found in the "sample_sheets/" directory of this repository. 

After generating each sample sheet, upload to the Experiment Folder on GCP. 

  1. **samplesheet.txt**
  
      + This sample sheet should include file paths to the paired read 1 and read 2 fastqs for each sample as well as basic sample metadata. The bcl2fastq pipeline automatically generates a .txt file with the file path locations of all fastqs for each run. Navigate to [TERRA_BUCKET_NAME]/[EXPERIMENT_FOLDER]/[fastqs] and download the files with the extension_fastqs.txt for each run. Use these file paths to pupulate samplesheet.txt
      
      + LibID = A numerical value for each full library (in this case, for each HIVE, containing RNA / HTO / and ADT libraries)
      
      + Dataset = M72RUN00N
      
      + Group = HIVE00N
      
      + CellInput = 30000 (This is the input used for all HIVEs in this pilot phase study)
      
      + LibraryName = M72RUN00N_HIVE00N
      
      + Reference = hg38 
      
      + SampleType = PBMC
      
      + The remaining rows should contain the file paths to the RNA / HTO / and ADT read 1 and read 2 fastqs. 
      
```{r, echo = FALSE}
library(rio)
samplesheet <- import("data/sample_sheets/RUN001/Run_58_BNPv2beta_samplesheet.txt")

library(DT)
datatable(samplesheet, class = 'cell-border stripe', rownames = FALSE)
```

  2. **samplesheet_HashInfo.txt**
  
      + This sample sheet includes sample metadata and HTO sequences related to the hashing of individual samples that were pooled together for library preparation and sequencing. 
  
      + LibID = Same LibID from samplesheet.txt
      
      + SampleName = M72RUN00N_HIVE00N_PID_STIM
      
      + Group = vaccination status ("Placebo", "M72AS01E")
      
      + CellInput = 3750 (This is 30000 total cell input divided by 8 hashed samples)
      
      + SampleType = PBMC
      
      + TagSequence = HTO sequence used to barcode each individual sample during library preparation 

```{r, echo = FALSE}
library(rio)
samplesheet_hashinfo <- import("data/sample_sheets/RUN001/Run_58_BNPvbeta_samplesheet_HashInfo.txt")

library(DT)
datatable(samplesheet_hashinfo, class = 'cell-border stripe', rownames = FALSE)
```

  3. **biolegendtags.txt**
  
      + This sample sheet contains the ADT tags for the antibodies included in the BioLegend TotalSeq-A Human Universal Cocktail. 
      
      + Marker = Cell marker targeted by each antibody
      
      + TagSequence = ADT sequence associated with the marker
  
```{r, echo = FALSE}
library(rio)
biolegendtags <- import("data/sample_sheets/biolegendtags.txt")

library(DT)
datatable(biolegendtags, class = 'cell-border stripe', rownames = FALSE)
```
  
  4. **samplesheet_AdvancedOptions.txt**
  
      + This sample sheet pulls together information from the above sample sheets for additional demultiplexing of hashed and pooled samples and allows for more tailored inputs needed for CITEseq analysis. 
      
      + HashingInfo_Sheet = file path to samplesheet_HashInfo.txt in the GCP Experiment Folder
      
      + ADT_Info_Sheet = file path to biolegendtags.txt in the GCP Experiment Folder
      
      + Leave other rows blank unless needed upon reanalysis. 
  
```{r, echo = FALSE}
library(rio)
samplesheet_advancedoptions <- import("data/sample_sheets/RUN001/Run_58_BNPvbeta_samplesheet_AdvancedOptions.txt")

library(DT)
datatable(samplesheet_advancedoptions, class = 'cell-border stripe', rownames = FALSE)
```

### Run BNPv2_beta

  1. In your Experiment Folder that contains your individual sequencing run folders, create a subdirectory called "output" ([TERRA_BUCKET]/[EXPERIMENT_FOLDER]/[output]). 

  2. In your Terra Workspace, open the BNPv2_beta Workflow. 
  
  3. Select "Run workflow with inputs defined by file paths."
  
  4. Change BeeNetPLUS A01_Output_Folder to "gs://[TERRA_BUCKET]/[EXPERIMENT_FOLDER]/[output]"
  
  5. Change BeeNetPLUS A02_BeeNetPLUS_Sample_Sheet to "gs://[TERRA_BUCKET]/[EXPERIMENT_FOLDER]/[samplesheet.txt]"
  
  6. Change BeeNetPLUS B03_Advanced_Options_Input_Sheet to "gs://[TERRA_BUCKET]/[EXPERIMENT_FOLDER]/[samplesheet_AdvancedOptions.txt]"

  7. Leave the other inputs blank for now. We will address thresholds during QC and filtering at a later stage. 