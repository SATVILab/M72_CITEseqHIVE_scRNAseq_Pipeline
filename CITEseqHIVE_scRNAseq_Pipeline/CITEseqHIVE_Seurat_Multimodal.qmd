---
title: "CITEseq-HIVE Seurat Multimodal Analysis"
format: html
editor: visual
---

### Clear console

```{r, output=FALSE}
ls()
rm(list=ls())
```

### Set output directory

```{r}
dir_save <- "output/"
```

### Load libraries

```{r, message=FALSE}
library(Seurat)
library(ggplot2)
library(patchwork)
library(cowplot)
```

### Load the processed .Rdata file generated by CITEseqHIVE_Seurat_ClusterIDcells.qmd

```{r}
load("output/Seurat_ClusterIDcells_obj.Rdata")
obj
```

### Confirm Seruat object contains assays for RNA and ADT

```{r}
Assays(obj)
```

### Normalize the ADT data

```{r}
DefaultAssay(obj) <- "ADT"
obj <- NormalizeData(obj, normalization.method = "CLR", margin = 2)
```

### Visualize multiple modalities side-by-side

```{r}

# Create a list of all cluster identities in obj
cluster.ids <- levels(Idents(obj))

# Initialize a list to store cluster markers
cluster.markers.RNAandADT <- list()

# Loop through each Seurat cluster in obj

for (cluster.id in cluster.ids) {
  
  # Find genes for RNA assay sorted by adjusted p value 
  genes_RNA <- FindMarkers(obj, ident.1 = cluster.id, assay = "RNA")
  genes_RNA <- rownames(genes_RNA[order(genes_RNA$p_val_adj), ])
  
  # Find genes for ADT assay sorted by adjusted p value 
  genes_ADT <- FindMarkers(obj, ident.1 = cluster.id, assay = "ADT")
  genes_ADT <- rownames(genes_ADT[order(genes_ADT$p_val_adj), ])
  
  # Find common genes between RNA and ADT assays
  cluster.markers.RNAandADT <- intersect(genes_RNA, genes_ADT)
  
  object.name <- paste0("cluster.markers.", cluster.id)

  # Plot violin plots of relative expression 
  DefaultAssay(obj) <- "RNA"
  vln_RNA <- VlnPlot(obj,
                      features = c(cluster.markers.RNAandADT)[1:10],
                      log = TRUE,
                      ncol = 1,
                      pt.size = 0) 
  main_title <- ggdraw() + 
  draw_label(paste0("RNA Cluster ", cluster.id), fontface = "bold", size = 14, hjust = 0.5)
  vln_RNA <- plot_grid(main_title, vln_RNA, nrow = 2, rel_heights = c(0.05, 0.95))


  DefaultAssay(obj) <- "ADT"
  vln_ADT <- VlnPlot(obj,
                      features = c(cluster.markers.RNAandADT)[1:10],
                      log = TRUE,
                      ncol = 1,
                      pt.size = 0)
  main_title <- ggdraw() + 
  draw_label(paste0("ADT Cluster ", cluster.id), fontface = "bold", size = 14, hjust = 0.5)
  vln_ADT <- plot_grid(main_title, vln_ADT, nrow = 2, rel_heights = c(0.05, 0.95))
  
  vln_plots <- paste0("Multimodal_DEG_VlnPlotRelExp_Top10_", object.name, ".pdf")
  pdf(paste0(dir_save, vln_plots), height = 30, width = 10)
  print(vln_RNA | vln_ADT)
  dev.off()
  
  # Plot feature plots overlaid onto UMAP
  
  DefaultAssay(obj) <- "RNA"
  feature_RNA <- FeaturePlot(obj,
                              features = c(cluster.markers.RNAandADT)[1:10],
                              label = TRUE,
                              label.size = 4,
                              ncol = 1,
                              pt.size = 0)
  main_title <- ggdraw() + 
  draw_label(paste0("RNA Cluster ", cluster.id), fontface = "bold", size = 14, hjust = 0.5)
  feature_RNA <- plot_grid(main_title, feature_RNA, nrow = 2, rel_heights = c(0.05, 0.95))
  
  DefaultAssay(obj) <- "ADT"
  feature_ADT <- FeaturePlot(obj,
                              features = c(cluster.markers.RNAandADT)[1:10],
                              label = TRUE,
                              label.size = 4,
                              ncol = 1,
                              pt.size = 0)
  main_title <- ggdraw() + 
  draw_label(paste0("ADT Cluster ", cluster.id), fontface = "bold", size = 14, hjust = 0.5)
  feature_ADT <- plot_grid(main_title, feature_ADT, nrow = 2, rel_heights = c(0.05, 0.95))
  
  feature_plots <- paste0("Multimodal_DEG_FeaturePlot_Top10_", object.name, ".pdf")
  pdf(paste0(dir_save, feature_plots), height = 30, width = 10)
  print(feature_RNA | feature_ADT)
  dev.off()
}
```

### Document software

```{r}
sessionInfo()
```
